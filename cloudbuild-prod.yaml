steps:
  # Create the .env file
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "NEXT_PUBLIC_HCI_API_URL=${_NEXT_PUBLIC_HCI_API_URL}" > .env.production && \
        echo "NEXT_PUBLIC_CAPTCHA_SITE_KEY=${_NEXT_PUBLIC_CAPTCHA_SITE_KEY}" >> .env.production && \
        echo "CAPTCHA_SECRET_KEY=${_CAPTCHA_SECRET_KEY}" >> .env.production && \
        echo "NEXT_PUBLIC_GOOGGLE_ANALYTICS_ID=G-WR0ZYW8VSM" >> .env.production && \
        echo "NEXT_PUBLIC_HOTJAR_ID=5173806" >> .env.production && \
        echo "NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID=GTM-5RP92WWL" >> .env.production
  # Build the container image
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/hci:prod-$COMMIT_SHA", "."]
  # Push the container image to Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/hci:prod-$COMMIT_SHA"]
  # Kustomize: set the image in the kustomization.yaml file
  - name: "gcr.io/cloud-builders/gke-deploy"
    dir: "k8s/prod"
    entrypoint: "kustomize"
    args:
      - "edit"
      - "set"
      - "image"
      - "gcr.io/project-id/hci=gcr.io/$PROJECT_ID/hci:prod-$COMMIT_SHA"
  # Kustomize: apply the kustomization.yaml file
  - name: "gcr.io/cloud-builders/gke-deploy"
    dir: "k8s/prod"
    entrypoint: "kustomize"
    args: ["build", ".", "-o", "prod.yaml"]
  # Deploy the application to the GKE cluster
  - name: "gcr.io/cloud-builders/gke-deploy"
    dir: "k8s/prod"
    args:
      - "run"
      - "--filename=prod.yaml"
      - "--location=us-central1"
      - "--cluster=datario"
      - "--project=datario"

images:
  - "gcr.io/$PROJECT_ID/hci:prod-$COMMIT_SHA"